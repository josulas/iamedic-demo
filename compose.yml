services:
  mlflow:
    image: python:3.9-slim
    command: >
      bash -c "
      pip install mlflow[extras]==2.8.1 &&
      mlflow server 
      --host 0.0.0.0 
      --port 8080 
      --backend-store-uri file:///mlflow/mlruns 
      --default-artifact-root file:///mlflow/mlartifacts
      --serve-artifacts
      "
    ports:
      - "8080:8080"
    volumes:
      - ./models-training/mlruns:/mlflow/mlruns
      - ./models-training/mlartifacts:/mlflow/mlartifacts
    networks:
      - iamedic-demo-net
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
  seg-service:
    depends_on:
      mlflow:
        condition: service_healthy 
    build: 
      context: seg-service/
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8002:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - iamedic-demo-net
    develop:
      watch:
        - action: sync+restart
          path: ./seg-service
          target: /app
        - action: rebuild
          path: ./seg-service/Dockerfile
        - action: rebuild
          path: ./seg-service/requirements.txt
  bb-reg-service:
    depends_on:
      mlflow:
        condition: service_healthy 
    build: 
      context: bb-reg-service/
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8001:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - iamedic-demo-net
    develop:
      watch:
        - action: sync+restart
          path: ./bb-reg-service
          target: /app
        - action: rebuild
          path: ./bb-reg-service/Dockerfile
        - action: rebuild
          path: ./bb-reg-service/requirements.txt
  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - frontend/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - iamedic-demo-net
    depends_on:
      bb-reg-service:
        condition: service_healthy
      seg-service:
        condition: service_healthy
    ports:
      - "8501:8501"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
        - action: rebuild
          path: ./frontend/Dockerfile
        - action: rebuild
          path: ./frontend/requirements.txt
        - action: rebuild
          path: ./frontend/.env

networks:
  iamedic-demo-net:
    driver: bridge